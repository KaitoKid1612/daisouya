# vscode shift + option + p
openapi: "3.0.0"

info:
  title: "ドライバーのAPI"
  license:
    name: "MIT License"
    url: "https://opensource.org/licenses/MIT"
  version: "1.0.0"

servers:
  - url: "http://localhost:{port}/api/driver"
    description: "ローカル"
    variables:
      port:
        description: "ポート番号"
        enum: ["8000", "48000"]
        default: "48000"
  - url: "https://waocontest003.jp/api/driver"
    description: "ステージング"

tags:
  - name: "api_auth"
    description: "API認証"
  - name: "auth"
    description: "認証回り"
  - name: "fcm"
    description: "FCMデバイストークン"
  - name: "driver"
    description: "ドライバー"
  - name: "access"
    description: "アクセス権限"
  - name: "delivery_company"
    description: "配送会社"
  - name: "driver_register_delivery_office"
    description: "ドライバー登録営業所"
  - name: "driver_register_delivery_office_memo"
    description: "ドライバー登録営業所メモ"
  - name: "driver_schedule"
    description: "ドライバースケジュール"
  - name: "driver_task_review"
    description: "ドライバーのレビュー"
  - name: "delivery_office_task_review"
    description: "依頼者のレビュー"
  - name: "task"
    description: "稼働依頼"
  - name: "permission"
    description: "許可権限"
  - name: "ui"
    description: "UI"
  - name: "delivery_office"
    description: "依頼者"
  - name: "register_request"
    description: "登録申請"

paths:
  # API認証
  /token/store:
    post:
      summary: ログイン APIトークン作成して取得
      tags: ["api_auth"]
      requestBody:
        content:
          aapplication/json:
            schema:
              required:
                - email
                - password
                - device_name
              properties:
                email:
                  type: string
                password:
                  type: string
                device_name:
                  type: string
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: string
              example: 1|dr97s3gwHKBJDpTKz9WVn5tNsuMCCX65nwPiryDo

  /token/destroy:
    post:
      summary: ログアウト APIトークン削除
      tags: ["api_auth"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
      requestBody:
        content:
          aapplication/json:
            schema:
              required:
                - device_name
              properties:
                device_name:
                  type: string
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: string
              example: 1|dr97s3gwHKBJDpTKz9WVn5tNsuMCCX65nwPiryDo

  # 認証回り
  /forgot-password:
    post:
      summary: パスワード忘れ、再設定メール送信
      tags: ["auth"]
      requestBody:
        content:
          aapplication/json:
            schema:
              properties:
                email:
                  type: string
      responses:
        200:
          $ref: "#/components/responses/200_W"

  /reset-password:
    post:
      summary: パスワード忘れ、再設定
      tags: ["auth"]
      requestBody:
        content:
          aapplication/json:
            schema:
              properties:
                token:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
      responses:
        200:
          $ref: "#/components/responses/200_W"

  #FCMデバイストークン
  /fcm-device-token/upsert:
    post:
      summary: 作成
      tags: ["fcm"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
      requestBody:
        content:
          aapplication/json:
            schema:
              required:
                - device_name
                - fcm_token
              properties:
                device_name:
                  type: string
                fcm_token:
                  type: string
      responses:
        200:
          $ref: "#/components/responses/200_W"

  /fcm-device-token/show/{fcm_token}:
    get:
      summary: 取得
      tags: ["fcm"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: fcm_token
          description: "FCMトークン"
          in: path
          required: true
          schema: { type: string }
      responses:
        200:
          $ref: "#/components/responses/200_R"

  /fcm-device-token/destroy{fcm_token}:
    post:
      summary: 削除
      tags: ["fcm"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: fcm_token
          description: "FCMトークン"
          in: path
          required: true
          schema: { type: string }
      responses:
        200:
          $ref: "#/components/responses/200_W"

  # --ユーザ--
  /user/show/{driver_id}:
    get:
      summary: 取得
      tags: ["driver"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: driver_id
          description: "ドライバーID 空の場合ログインユーザー"
          in: path
          required: false
          schema: { type: integer }
      responses:
        200:
          $ref: "#/components/responses/200_R"

  /user/update:
    post:
      summary: 更新
      tags: ["driver"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
      requestBody:
        description: 条件によってバリデーションルールが変更される。
        content:
          multipart/form-data:
            schema:
              properties:
                type:
                  type: string
                  description: "編集タイプ 'email', 'password', 'user'のどれかを指定"
                name_sei:
                  type: string
                name_mei:
                  type: string
                name_sei_kana:
                  type: string
                name_mei_kana:
                  type: string
                email:
                  type: string
                current_password:
                  type: string
                password:
                  type: string
                gender_id:
                  type: integer
                birthday:
                  type: string
                post_code1:
                  type: string
                post_code2:
                  type: string
                addr1_id:
                  type: integer
                addr2:
                  type: string
                addr3:
                  type: string
                addr4:
                  type: string
                tel:
                  type: string
                career:
                  type: string
                introduction:
                  type: string
                icon_img:
                  type: string
      responses:
        200:
          $ref: "#/components/responses/200_W"

  # --登録審査中ドライバーのアクセス権限パス--
  /user/allow-path/driver-waiting:
    get:
      summary: 一覧取得
      tags: ["access"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
      responses:
        200:
          $ref: "#/components/responses/200_R"

  # --配送会社--
  /delivery-company:
    get:
      summary: 一覧取得
      tags: ["delivery_company"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
      responses:
        200:
          $ref: "#/components/responses/200_R"

  /delivery-company/show{company_id}:
    get:
      summary: 取得
      tags: ["delivery_company"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: company_id
          description: "配送会社ID"
          in: path
          required: true
          schema: { type: integer }
      responses:
        200:
          $ref: "#/components/responses/200_R"

  # --ドライバー登録営業所--
  /driver-register-delivery-office:
    get:
      summary: 一覧取得
      tags: ["driver_register_delivery_office"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
      responses:
        200:
          $ref: "#/components/responses/200_R"

  /driver-register-delivery-office/upsert:
    post:
      summary: 作成or更新
      tags: ["driver_register_delivery_office"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                register_office:
                  type: array
                  items:
                    type: number
      responses:
        200:
          $ref: "#/components/responses/200_W"

  # --ドライバー登録営業所メモ--
  /user/driver-register-delivery-office-memo:
    get:
      summary: 一覧
      tags: ["driver_register_delivery_office_memo"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
      responses:
        200:
          $ref: "#/components/responses/200_R"

  /user/driver-register-delivery-office-memo/store:
    post:
      summary: 作成
      tags: ["driver_register_delivery_office_memo"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
      requestBody:
        content:
          application/json:
            schema:
              required:
                - delivery_office_name
                - post_code1
                - post_code2
                - addr1_id
                - addr2
                - addr3
              properties:
                delivery_company_id:
                  type: integer
                delivery_office_name:
                  type: string
                post_code1:
                  type: string
                post_code2:
                  type: string
                addr1_id:
                  type: integer
                addr2:
                  type: string
                addr3:
                  type: string
                addr4:
                  type: string
      responses:
        200:
          $ref: "#/components/responses/200_W"

  /user/driver-register-delivery-office-memo/show/{register_office_memo_id}:
    get:
      summary: 取得
      tags: ["driver_register_delivery_office_memo"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: register_office_memo_id
          description: "登録営業所ID"
          in: path
          required: true
          schema: { type: integer }
      responses:
        200:
          $ref: "#/components/responses/200_R"

  /user/driver-register-delivery-office-memo/update/{register_office_memo_id}:
    post:
      summary: 更新
      tags: ["driver_register_delivery_office_memo"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: register_office_memo_id
          description: "登録営業所メモID"
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        content:
          application/json:
            schema:
              required:
                - delivery_office_name
                - post_code1
                - post_code2
                - addr1_id
                - addr2
                - addr3
              properties:
                driver_id:
                  type: integer
                delivery_company_id:
                  type: integer
                delivery_office_name:
                  type: string
                post_code1:
                  type: string
                post_code2:
                  type: string
                addr1_id:
                  type: integer
                addr2:
                  type: string
                addr3:
                  type: string
                addr4:
                  type: string
      responses:
        200:
          $ref: "#/components/responses/200_W"

  /user/driver-register-delivery-office-memo/destroy/{register_office_memo_id}:
    post:
      summary: 削除
      tags: ["driver_register_delivery_office_memo"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: register_office_memo_id
          description: "ID"
          in: path
          required: true
          schema: { type: integer }
      responses:
        200:
          $ref: "#/components/responses/200_W"

  # --ドライバースケジュール--
  /driver-schedule:
    get:
      summary: 取得
      tags: ["driver_schedule"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: calendar_month
          description: "カレンダーの月 YYYY-MMの形式 web側で利用"
          in: query
          schema: { type: string }
        - name: available_date_from
          description: "稼働可能日 from"
          in: query
          schema: { type: string }
        - name: available_date_to
          description: "稼働可能日 to"
          in: query
          schema: { type: string }
      responses:
        200:
          $ref: "#/components/responses/200_R"

  /driver-schedule/store:
    post:
      summary: 作成
      tags: ["driver_schedule"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
      requestBody:
        content:
          application/json:
            schema:
              required:
                - available_date
              properties:
                available_date:
                  type: array
                  items:
                    type: string
      responses:
        200:
          $ref: "#/components/responses/200_W"

  /driver-schedule/destroy/{schedule_id}:
    post:
      summary: 削除
      tags: ["driver_schedule"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: schedule_id
          description: "スケジュールID"
          in: path
          required: true
          schema: { type: integer }
      responses:
        200:
          $ref: "#/components/responses/200_W"

  # --稼働依頼--
  /driver-task:
    get:
      summary: 一覧取得
      tags: ["task"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: page
          description: "ページ番号"
          in: query
          required: false
          schema: { type: integer }
        - name: keyword
          description: "検索ワード"
          in: query
          required: false
          schema: { type: string }
        - name: from_task_date
          description: "タスク日付 以上"
          in: query
          required: false
          schema: { type: string }
        - name: to_task_date
          description: "タスク日付 以下"
          in: query
          required: false
          schema: { type: string }
        - name: task_status_id
          description: "タスクステータス"
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
        - name: from_created_at
          description: "作成日 以上"
          in: query
          required: false
          schema: { type: string }
        - name: to_created_at
          description: "作成日 以下"
          in: query
          required: false
          schema: { type: string }
        - name: from_updated_at
          description: "更新日 以上"
          in: query
          required: false
          schema: { type: string }
        - name: to_updated_at
          description: "更新日 以下"
          in: query
          required: false
          schema: { type: string }
        - name: orderby
          description: "並び替え"
          in: query
          required: false
          schema: { type: string }
        - name: addr1_id
          description: "都道府県"
          in: query
          required: false
          schema: { type: integer }
        - name: who
          description: "誰か。myselfと指定すると自分の依頼のみに絞られる"
          in: query
          required: false
          schema: { type: string }
      responses:
        200:
          $ref: "#/components/responses/200_R"

  /driver-task/show/{task_id}:
    get:
      summary: 取得
      tags: ["task"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: task_id
          description: "稼働ID"
          in: path
          required: true
          schema: { type: integer }
      responses:
        200:
          $ref: "#/components/responses/200_R"

  /driver-task/update/{task_id}:
    post:
      summary: 更新
      tags: ["task"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: task_id
          description: "稼働ID"
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        description: 条件によってバリデーションルールが変更される。
        content:
          application/json:
            schema:
              properties:
                type:
                  type: string
                  description: "編集タイプ accept(受諾), reject(却下) のどれかを指定する"
      responses:
        200:
          $ref: "#/components/responses/200_W"

  # --許可権限--
  /driver-task-permission/show/{task_id}:
    get:
      summary: 取得
      description: '稼働依頼に関係する操作権限'
      tags: ["permission"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: task_id
          description: "稼働ID"
          in: path
          required: true
          schema: { type: integer }
      responses:
        200:
          $ref: "#/components/responses/200_R"

  # --UI--
  /driver-task-ui/show/{task_id}:
    get:
      summary: 取得
      description: '稼働依頼に関係するUI'
      tags: ["permission"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: task_id
          description: "稼働ID"
          in: path
          required: true
          schema: { type: integer }
      responses:
        200:
          $ref: "#/components/responses/200_R"

  # --ドライバーへのレビュー--
  /driver-task-review:
    get:
      summary: 一覧取得
      tags: ["driver_task_review"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: page
          description: "ページ番号"
          in: query
          required: false
          schema: { type: integer }
        - name: type
          description: "`all`を指定すると全て取得"
          in: query
          required: false
          schema: { type: string }
        - name: driver_id
          description: "ドライバーIDで絞り込む"
          in: query
          required: false
          schema: { type: string }
      responses:
        200:
          $ref: "#/components/responses/200_R"

  /driver-task-review/show/{review_id}:
    get:
      summary: 取得
      tags: ["driver_task_review"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: review_id
          description: "レビューID"
          in: path
          required: true
          schema: { type: integer }
        - name: driver_task_id
          description: "稼働ID"
          in: query
          required: false
          schema: { type: integer }
      responses:
        200:
          $ref: "#/components/responses/200_R"

  # --依頼者へのレビュー--
  /delivery-office-task-review:
    get:
      summary: 一覧取得
      tags: ["delivery_office_task_review"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: type
          description: "`all`を指定すると全て取得"
          in: query
          required: false
          schema: { type: string }
        - name: delivery_office_id
          description: "依頼者IDで絞り込む"
          in: query
          required: false
          schema: { type: string }
      responses:
        200:
          $ref: "#/components/responses/200_R"

  /delivery-office-task-review/show/{review_id}:
    get:
      summary: 取得
      tags: ["delivery_office_task_review"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: review_id
          description: "レビューID"
          in: path
          required: false
          schema: { type: integer }
        - name: driver_task_id
          description: "稼働ID"
          in: query
          required: false
          schema: { type: integer }
      responses:
        200:
          $ref: "#/components/responses/200_R"

  /delivery-office-task-review/store:
    post:
      summary: 作成
      tags: ["delivery_office_task_review"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
      requestBody:
        content:
          application/json:
            schema:
              required:
                - driver_task_id
                - score
              properties:
                driver_task_id:
                  type: integer
                score:
                  type: integer
                title:
                  type: string
                text:
                  type: string
      responses:
        200:
          $ref: "#/components/responses/200_W_data"

  # -- 依頼者 --
  /delivery-office:
    get:
      summary: 一覧取得
      tags: ["delivery_office"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: page
          description: "ページ番号"
          in: query
          required: false
          schema: { type: integer }
      responses:
        200:
          $ref: "#/components/responses/200_R"

  /delivery-office/show/{delivery_office_id}:
    get:
      summary: 取得
      tags: ["delivery_office"]
      parameters:
        - $ref: "#/components/parameters/api_auth"
        - name: delivery_office_id
          description: "依頼者ID"
          in: path
          required: true
          schema: { type: integer }
      responses:
        200:
          $ref: "#/components/responses/200_R"

  # --登録申請--
  /register-request/store:
    post:
      tags: ["register_request"]
      summary: "作成"
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name_sei
                - name_mei
                - name_sei_kana
                - name_mei_kana
                - email
                - gender_id
                - birthday
                - post_code1
                - post_code2
                - addr1_id
                - addr2
                - addr3
                - tel
                - career
                - introduction
                - terms_service
              properties:
                name_sei:
                  type: string
                name_mei:
                  type: string
                name_sei_kana:
                  type: string
                name_mei_kana:
                  type: string
                email:
                  type: string
                gender_id:
                  type: integer
                birthday:
                  type: string
                post_code1:
                  type: string
                post_code2:
                  type: string
                addr1_id:
                  type: integer
                addr2:
                  type: string
                addr3:
                  type: string
                addr4:
                  type: string
                tel:
                  type: string
                career:
                  type: string
                introduction:
                  type: string
                message:
                  type: string
                terms_service:
                  type: boolean

      responses:
        200:
          $ref: "#/components/responses/200_W"

  /register-request/update:
    post:
      tags: ["register_request"]
      summary: "更新"
      requestBody:
        content:
          application/json:
            schema:
              required:
                - register_request_token
                - email
                - password
              properties:
                register_request_token:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          $ref: "#/components/responses/200_W"

components:
  parameters:
    api_auth:
      in: header
      name: Authorization
      schema:
        type: string
      description: Authorization Bearer token

  responses:
    200_R:
      description: "Success Read"
      content:
        application/json:
          schema:
            properties:
              status: { type: boolean }
              data: { type: object }
    200_W:
      description: "Success Write"
      content:
        application/json:
          schema:
            properties:
              status: { type: boolean }
              message: { type: string }

    200_W_data:
      description: "Success Write & + data property"
      content:
        application/json:
          schema:
            properties:
              status: { type: boolean }
              message: { type: string }
              data: { type: object }

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
